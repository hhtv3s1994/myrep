一、语法<?php ?>  可插入html中任何位置 2、注释单行// 多行/**/
二、变量 1、$变量名 2、 作用域 全局global 函数内部全局必须global 局部 超全局 参数 3、静态变量 static 4、参数作用域 5、获取类型 gettype（变量） 设置类型settype(变量，类型)  类型判断:是数组 is_array(变量)  是串 是浮点 是长整型  是实例 instanceof 
empty() 6、类型转换 转整数 转浮点数 转字符串 strval()   7、变量已设置 isset($_POST[])  8、销毁变量unset($a)



三、输出 ehco 输出多个字符串 print 返回值1  print_r() var_dump()打印数组对象

四、heredoc <<<EOF   EOF定界符

五、数据类型 串 对象 整型 浮点 布尔 数组 空 资源（句柄）

六、常量 define("常量名","常量值",true)

七、字符串   连接点号 $s1.$s2  字符串长度strlen() 子串位置strpos(串，子串)  表单是否填写isset() 发送电子邮件 email(地址，主题，内容)

字符串填充str_pad(串，新长度，填充字||填充位置) 字符串反转strrev（串） 字符串重复str_repeat(串，次数)  转换为html实体 htmlentities(串) md5转码 md5(串) 字符串视为数组$a{0}

去除空格 trim(串，过滤字符)  左剔除ltrim()  右剔除rtrim() 

换行符改成<br/) nl2br(串) 打印输出 print() 返回true/false 

printf（串+占位符，插入字）  插入串、数、字符

格式化便于存于数据库  去除斜线addslashes() stripslashes()

大写strtoupper(串) 小写strtolower(串) 首字 ucfirst(串)  

字符串分割成数组 explode（分隔符，串，分隔数）  数组连接成字符串 implode（连接符，组）join(组)  

取出 strtok(串，分隔符)执行一次取一个，内部指针

比较strcmp(串1，串2) 正负0   不分大小写比较strcasecmp() 自然比较strnatcmp()

子串 substr(串，起始，长度)   长度strlen(串)    查找子串 strpos（串，子串）返回位置   返回第一个strstr(串，子串)  不分大小stristr() 返回最后strchr（串，子串） 
 3、替换 str_replace(子串，新子串，主串，开始位置) substr_replace(串，替换串，开始，长度)


八、运算符 1、算术 加减乘除模反  整除intdiv(10,3) 2、赋值 = += .= 3、递增递减  4、比较 大于 等于 == 绝对等于=== 不等于 绝对不等于 5、逻辑 与或非异或 6、数组运算符
+ 等于==   7、三元 逻辑式?　值１：值２

九、条件 if(){}else{} elseif(){}   switch(值) {case 值:语句;break;case 值:语句;break;}

十、循环 while do while  for  foreach

十一、数组 =array(1,2,3)  1、类型索引数组，关联数组 2、元素类型，可以是任何类型 3、数组长度 count(组) 4、遍历for($i) $a[$i] 4、关联数组 array("键"=>"值")5、


排序(会改变原数组) sort() 降序排序rsort() 关联值排序 asort() 关联键排序 ksort() 降序arsort() krsort()

1索引 array() range()  2、遍历数组  foreach($array as $key=>$value )

each() list()    3、多维遍历  4、排序   5、重排序 随机打乱 shuffle（组）反转arrary_reverse(组)  6、排序函数 7、文件载入数组  数组长度count(组)  分割explode()   串中提取数字 intval()8、数组操作  数组指针 返回指针指向元素键/值each(数组) 前移指针next(组) 后移指针prev（组） 到尾部 end（组）    current（组）   重置reset() 当前key(组)  

9、给各元素添加函数  array_walk(组，function(){})
10、元素个数 sizeof count(组)   11、关联数组转为变量 键值变成变量名值 extract(组)  array_count_values()


给数组赋值list(1,2,,3)=组      

数组处理 返回值数组array_values(组)  返回键数组array_keys(组) in_array(值，组，是否比较类型) array_search( )

返回各值次数数组array_count_values(组)  返回不重复数组array_unique(组)

交换键值array_filp(组) 



十二、超全局变量    所有变量$GLOBALS 服务器$_SERVER  表单请求$_REQUEST  $_POST $_GET 文件$_FILES 环境$_ENV $_COOKIE  $_SESSION

十三、函数 定义function f($arg){}  调用   
函数原型（返回类型，参数类型，个数）    php函数不分大小写    函数定义（声明）:function(参数){函数体}  参数类型:基本类型，对象，数组 函数体内有:外部变量，内部定义变量，传入参数，对象属性，表达式语句，函数调用，内部函数定义    返回值类型:基本类型，数组，对象，句柄，空  

 引用传参:修改传入的外部变量 值传递:不修改传入的外部变量  &$参数

十四、魔术变量 行号__LINE__  文件路径__FILE__  文件目录__DIR__   函数名（函数内） __FUNCTION__ 类名 __CLASS__   __TRAIT__   方法名__METHOD__ 命名空间__NAMESPACE__

十五、命名空间 1、  namespace 空间名 避免冲突   2、子命名空间

十六、类和对象 1、类定义 2、实例化对象 3、成员属性和属性方法 4、构造函数 5、析构函数 6、继承 7、访问控制 属性 方法  8、接口 9、常量 10、抽象类 11、静态 12、父类构造方法 13、最终类（不可继承）     封装继承多态 类class    构造函数（）{引用父类构造}   $this      _get(){} _set(){}    私有无法继承       重写子类 final函数禁止重写
    重载方法不常用  _call  自动加载__autoload()     迭代器   反射

十七、表单   下拉菜单的值   复选框  多选下拉菜单    表单验证 必须 格式

十八、日期  返回时间戳mktime(时,分,秒,月，日，年) 字符转时间strtotime() data() 

十九、包含 获取require(php,html片段,函数，类) 错误  包含include() 警告    获取一次require_once()  模板重用


二十、文件处理 
1、打开文件fopen(地址，修饰符)  返回资源（句柄）  地址:绝对相对，UNIX用正斜杠，windows可以正反    打开网络文件  文件访问权限  打开失败

2、写文件 fwrite(文件资源，"字符串")  file_put_contents()  文件格式 字符串长度strlen() 3、关闭文件fcloce(句柄) 4、读文件 （1）每次读一行
是否到文件尾 feof(句柄)   读到指定长度  fgets（句柄，长度）  fgets(句柄，长度，过滤器)  fgetcsv（句柄，长，定界符）  
（2）读取整个文件 fread（地址，本地，上下文） fpassthru()  返回字符串数组file()  返回字符串file_get_content() （3）一次一个字符 fgetc(句柄) （4）读任意长度 fread(句柄，长度） 5、其他  文件存在 file_exsists（地址） 文件大小file_size(地址) 文件删除 unlink(地址) 文件指针 ftell(句柄)   指针到开头rewind(句柄)  改变指针fseek(句柄，位置) 重命名rename(地址，新名字)   

是文件is_file(文件地址)  是目录is_dir(地址)  文件类型filetype(地址) 创建时间filectime(地址) 修改时间filemtime(地址) 访问时间fileatime(地址） 属性stat(地址)   目录指针 

可写is_writable(路径) 可读is_readable() 是上传文件


文件锁定 flock（句柄，操作值）  锁读 锁写 放锁 防阻塞 


目录  1、打开目录 opendir()返回目录句柄  读取文件名readdir(句柄)   关闭目录closedir(句柄)    2、目录对象  dir(目录)  句柄->handle 路径->read（） 

排序scandir()   name(目录)  basename(目录)  创建目录 mkdir(目录，访问权限)  磁盘剩余 disk_free_space() 磁盘大小disk_total_space() 

获取环境getenv()



二十一、上传    1、上传设置 php.ini  允许上传 大小限制 临时目录  2、表单类型  type="file"  MIME属性 enctype="multipart/form-data" 3、隐藏表单域设置文件最大长度  （4）文件名 name  6、$_FILE['userfile'][]  文件名name  文件类型type  文件尺寸size 错误信息 error    

二十二、Cookie  设置cookie setcookie(名，值，时间) 取回值$_COOKIE["名"] 是否设置cookie isset()

二十三、session 开启session_start()   读取和赋值$_SESSION[] 销毁session_destroy(名，值)

二十四、邮件

二十五、错误异常 1、die("提示字符")  2、自定义错误处理函数 function（错误等级,错误信息，错误文件名，错误行号，错误变量){}  3、设置自定义错误 set_errpr_handler（函数名）

二十六、过滤器 1、过滤函数 单一变量filter_var(值,过滤器) 多个变量filter_var_array()    输入变量filter_input （输入类型，值，过滤器） 多个输入变量filter_input_array（） 2、过滤器(1)类别 验证过滤器（返回true,false）  sanlitize（删除非法字符返回字符串）（2） 整数过滤器, FILTER_VALIDATE_INT 字符串过滤器FILTER_SANITIZE_STRING回调过滤器FILTER_CALLBACK（3）输入类型 INPUT_GET 3、验证选项 flag

二十七、JSON

二十八、Mysql  连接数据库   对象 new mysqli(主机，账号，密码，库名) 返回对象  mysqli_connect() 返回句柄 是否连接   重新选库  对象->select_db(库名) mysqli_select_db(句柄，库名)

查询  用变量保存sql语句  对象->query（语句） 返回结果对象   mysqli_query() 返回结果句柄   行数 结果->num_rows  mysqli_num_rows(结果) 

返回结果关联数组  ->fetch_assoc() mysqli_fetch_assic(句柄)   返回结果索引数组  ->fetch_row()  my_sqli_fetch_row(句柄)    

返回结果对象->fetch_object()   

释放结果 结果->free()  mysqli_free_result(句柄) 断开连接 库->close() 


预备语句，用???代替sql  





二十九、正则表达式  ereg(模式，传，存储数组名)  返回数组 不分大小写eregi（）  2、替换 ereg_replace(模式，替换串，主串) eregi_replace() 3、 分割成数组 split(分隔符，模式，串，个数）

三十、HTTP  
1、发送邮件mail() 2、读取网站数据file_get_content(url)3、网络查找函数 获取主机gethostbyname()  dns_get_mx（）   解析URL parse_url()返回关联数组 主机 端口 路径 用户 查询 

三十一、FTP   连接 ftp_connect   登录 ftp_login(句柄)  下载fileexsists()  文件修改时间filemttime（）  关闭 


压缩 图像
  

