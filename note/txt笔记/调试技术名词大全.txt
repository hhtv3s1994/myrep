调试技术名词大全

第1章 名词
查壳，查导入表


看系统函数的名字

重点在winmain中，之前的启动函数可以忽略


内存基址  提升权限  进程名  pid 句柄

分页  保护模式   pe  dll加载  重定位   映射

基址偏移    
call  某地址    call偏移   地址不同需要重新分配

seh

peb结构  fs  寄存器 

重定向   偏移

内核函数

句柄   隐藏窗口   隐藏进程   断链表

互斥体


进程注入   dll注入  hook系统api



读取进程内存  进程空间共享   指针  memcpy

创建远程线程   createremotethread  dll中的函数调用

消息钩子   修改导入表
VirtualQueryEx  openprocess
WriteProcessMemory


附加进程

基址实际上是动态分配内存  堆栈  是指针形式
动态地址重启后改变



什么是基址一级基址 二级基址
基址的概念一般在带位移的寄存器间接寻址中出现,该寻址模式用以实现数据结构和编写与位置无关的代码(可重定位).


寄存器
数据寄存器  eax 累加器
ebx基地址
 ecx 计数器  循环  字符串 位移
edx  乘除
指针寄存器esi edi  主要存放偏移量
esp 栈顶  ebp
指令指针寄存器eip
标志寄存器
段寄存器  cs  ss  ds  选择子

指令add sup    入栈   读取堆栈  esp+8
push pop
函数ret的是eax的值


关于函数调用，参数和返回地址入栈，出栈，返回
返回值超出eax会存在edx中
堆栈中的都是局部变量，可用于缓存
局部变量分配内存，esp

指针入栈


第2章 使用各种方便工具源码
找call

驱动过保护

各种数据结构


吾爱破解工具包


第3章 先看基础入门书


第4章 反调试和反反调试


第5章 c++  api参考
多条件分行


递归栈jian

形参是传值无法控制变量   请传入指针，操作变量的实际值   传入的是一个地址


关于类内部函数成员访问，真的需要用this.成员吗。。。用this可以获取代码提示


变量默认值(局部无，全局有)

常量，字面量  define  const
修饰 有符号无符号  变量类型，字节数。。。int4  宽字节


字符串定义   字符数组   操作函数
字符串复制给字符数组strcpy

数学函数


存储类   寄存器  静态  线程

取地址
cout  &

数组和指针    数组开头   a代表数组地址值
a[]   是数组元素值    
p=a   a+i=p+i   是数组的各元素地址
也要看是什么数组，有的数组一个元素超过一个字节



声明指针

指针值等于地址值   p=&

访问地址内保存的值*p
指针移动，地址加减，可以访问修改任意内存值

指针为参数   应该输入一个地址值
数组为参数，内部访问数组元素
返回值也可以是

指针数组   指向指针的指针(多级间接寻址)
**p


引用是别名

日期时间
输入输出  cout   err  log      附带的方法


结构体  复合类型   struct  类型名{类型 变量名}   访问成员变量
指向结构的指针



类    封装   构造   析构  成员函数  this指针  静态成员

继承 is a  重写
重载
多态   虚函数  早绑定   动态链接  静态链接
接口  抽象类

文件流 << 打开 打开模式   关闭  文件位置指针  读取  写入

异常处理   异常事件类型 


动态内存   堆栈  变量(应该是指针?)= new 类型
   delete


命名空间  相当于包   namespace::变量/函数名 
使用命名空间  usingnamespace可以免除输入空间名如  std标准库


泛型编程  。模板函数  类型使用占位符
<typename  T>  返回类型 T  参数类型T


预处理器   宏定义    头文件包含
行号 文件  日期


中断  信号  用来捕获事件   注册信号

sleep函数  生成信号


多线程   线程通信

cgi程序

标准库   stl容器   向量  算法  迭代器
标准库   基础库   面向对象库

第6章 windows消息(事件)
破解反调试，找到原理，hook掉，或者直接jmp掉验证函数


od中注意转换进制

数据目录表(  重要)
nativeapi


hook工具  hook系统api等


如何hook api   获取模块基地址getmoudlehandle
获取函数地址  去除内存保护  jmp到自己的函数执行  jmp回来

防止附加 debugactive


数据窗口观察windows函数名

window pe中含有非常多结构体  有些是指针

各种结构体成员变量和函数 参数返回值
dll输出表

重定位表，当动态分配内存和原内存不同
比如dll一定会重定位  
teb     od忽略所有异常   非法访问异常  异常处理函数可能强制退出或者其他领空

dll劫持  注入 hook

eip


seh异常列表  程序不处理异常则弹出对话框


保护模式

平坦模式  地址空间

段寄存器   段选择子  段描述符

虚拟内存   map映射  2g程序  2g系统

分时   分配地址，不分配内存   映射到虚拟内存地址   物理地址没关系，不需要关心
dll也被映射但是暂时不读入

应用程序不会直接访问物理地址

权限级别r0  r3


pe   区块 .text指令   数据  只读  输入表dll  资源
磁盘和内存的映射一致  
入口点 ep  文件偏移地址从0开始   winhex

虚拟地址   基地址

区块表 区块对齐值，多的用0填充

输入表 dll函数名  loadliberary  get procadress
call地址和jmp 地址



createprocess

暂停点在winmain或者入口点

断点  读内存断点   硬件断点
内存访问一次性断点   消息断点

断下函数

ida  flirt  hex rays decomplier


edi esi  eax  ebx
启动函数

堆栈ebp  esp

函数识别  参数传递   堆栈平衡   寄存器传递 fastcall   返回值

数据结构  局部  堆栈  寄存器
全局  固定地址
数组  基址加变量  []  基址可以是常量或者寄存器
控制语句  跳转 switch

 cmp   jne

循环  计数器ecx

常见的汇编代码   异或初始化xor自身为0
push  pop

编译器优化逻辑判断
优化乘除法  lea   2的幂

字符串存储格式  直接寻址  间接[eax+c]|
计算字符串长度
字符串比较

网络验证

getmoudlehandle


壳自带输入表  hook api   ope原入口点跳转



debugapi事件通知

单步运行进程  sf标志  每执行一步就发送消息

getthreadcontext

修改文件createfile  setfilepoint  writefile
修改内存loader   createprocess  readprocessmemory writeprocessmemory
权限 virtual protect
挂起是干嘛的   循环挂起  判断是否到了指定程序段?
suspend resume  是否解码?

利用调试寄存器


dll劫持   伪造dll执行函数后  跳转到真正的dll
dll函数转发器
劫持输出函数


补丁工具

修改exe  重定位  增加dll  增加函数
创建dll比较有用

第7章 监视api调用注册表
文件读写

第8章 协议分析 网络分析工具
抓包

请求  响应

第9章 od有效使用
字符串 
内存
调用的系统函数名

代码注入器，注入远程代码，call函数

od的所有功能


od特征码

跟随classproc
分析代码  假定参数

带壳调试

重要断点

层层call   系统函数其实可以直接跳过
游戏内部函数可以注释一下，写成符号表
对于   反调试手段要特别注意

查壳  esp

断消息框

堆栈调用   断按下按钮

文件处理
进程处理


读取文件setfilepoint



第10章 api monitor
代码注入器

第11章 ida如何静态分析
可以先动态跟踪到函数，再在指定位置反编译成c代码

定位到winmain

文本图形模式

图形视图看函数流程   函数引用关系

字符串定位法



第12章 文件偏移到va的换算


第13章 汇编识别
函数直接调用

指针调用
间接调用
jmp手工调用


第14章 附加数据


第15章 ce配合od
找不到数据咋办

搜索字节数组

加密数据应该会解密啊   

会不会是加密了，但是显示出来一般会解密吧

是什么访问了这个地址?


内存遍历工具  结构化内存监视器  龙龙内存

间接call  直接call

第16章 dump内存再分析


第17章 pchunter  ceveh模式


第18章 窗口句柄分析工具


第19章 sharpod strongod


第20章 各社的解包工具asmondeans
https://www.52pojie.cn/thread-203005-1-1.html

第21章 找到特殊码


第22章 引擎脚本写法


第23章 常见正则


第24章 文件头 归档信息


第25章 右键分析代码ctrl n


第26章 忽略异常
从哪儿下断  先到入口点，别急着f9
准备拦截函数

如何分析反调试

第27章 run跟踪


第28章 输入表重建工具


第29章 函数调用处


第30章 看代码的能力


第31章 分析代码
dll拦截minifilter、sfilter...反正都是对LdrLoadDll过程中可能出现的IRP进行拦截
先讲第一种，最简单的方法当然是拦截CreateFileMapping/CreateSection，它对应的IRP是IRP_MJ_ACQUIRE_FOR_SECTION_SYNCHRONIZATION

注册minifilter就不提了



lea  eax   []  传送地址

0 4  8  c
打包结构分析
文件头  索引   偏移地址   用readfile文件指针来指比较快 文件大小  文件名  用hash代替文件名(难以识别)   
选择最小的包进行分析


防止线程注入


识别库函数  api     

熟悉一些ascii编码,尤其是某些符号

索引表，同类型文件对比  
文件句柄createfile   readfile buffer  字节数
buffer可以下断

对包文件读取下断，判断读取索引
压缩算法识别


数据都是按字节存储的，类型多半是byte 2word 4dword   等   而字符串数组属于复合类型
字符串终止符
小端存储指的是数据结构的内部排列，以字节为单位的反序，多出来的由0填充，数值是小端，而字符串是顺序的?   如long

有例外就是unicode    utf   因为是两个字节组成的
修改文件头，字段 ，字节长度
and or not xor  shr  shl取出高低位  异或交换数字(还有一个是相减法，相乘法相除法)
 找字符串 找dll导出表 看参数类型返回类型  函数相对虚拟地址

winhex数据解释器

快速分析地址和值

保护ebp
给局部变量留空间esp-20
回复堆栈esp+  
ebp=esp当前栈顶

乘以二  add eax eax
 
push 可以用来保护寄存器的当前值，用过了之后恢复到寄存器中    
pop   寄存器   

edi指向局部变量缓冲区[ebp-]  

起变量名，局部变量函数不结束是不会消失的
常量   一般直接寻址
计数器循环 move  ecx    10  往往固定值
变量全部保存在堆栈  四字节为单位，[ebp-4]也可能用esp表示，函数执行完毕后堆栈变量会被清除

字符串   指针法
数组  定义   访问
二维
结构体  定义  赋值  修改
条件  cmp  jnz   else 无条件跳转
switch   转为跳转表  二叉树递归  遍历

函数    分析函数参数类型，个数
返回值给eax存不了加上edx 或者是直接修改堆栈变量
retn   参数字节数

堆栈平衡，检查esp 和ebp   恢复堆栈


第32章 编程进行调试，打log
模块  判断领空  内存进程名


关于main函数识别 三个push 一个call
搜索字符串  下断 堆栈返回调用 
栈回溯法
逐步分析，以jmp和call为单位  逐层搜索  不要随便深入


 3
XPoy 2010-5-25 14:37	13 楼
找main的主要方法是
在开始的那段中找关闭进程的API调用，exit/ exitprocess/ TerminateProcess之类。在其前的调用通常是 main

还有找DLL的入口，loadlibrary调用的lpkloaddll在调用dll入口之前是 
call ebx这样调用DLL入口的，所以OD挂个DLL直接执行到此DLL main的返回位置，retn之后就得到了本机上 中loadlibrary调用  dll main的关键点，因为user32.dll总是最早载入，本机上可以是一直用。


lpk  veh  

跳转到非法地址
修改数据，非法填充

反调试代码试验   简单win程序

消息机制

制造异常  seh处理函数
PAGE_EXECUTE_READ 保护，导致不能修改内存 ，我调用VirtualProtect 来修改保护，可是怎样都修改不了，返回错误代码：87 ，于是想通过hook NtProtectVirtualMemory 来拦截他改内存保护，可是他并没有通过 VirtualProtect VirtualProtectEx来修改内存保护。根本拦截不到！！  

X64dbg插件代码可以有效修改内存保护(貌似游戏还有效验)


第33章 反汇编引擎
的disasm,udis86和Capstone.
od的已抛弃

第34章 自己写个壳软件就认不出


第35章 win资源监视器


第36章 外挂从小游戏开始尝试


第37章 差异分析 反复造变量


第38章 sdl   线程锁互斥体


