命名空间   use  namespace

一、1、目录结构    入口文件public/index.php  单入口 域名/public/index.php  重新映射v-host     2、应用目录 application/模块目录 主模块index  模块下有控制器 模型 视图等・1   3、URL和控制器 （1） 通过不同URL访问不同控制器中的不同方法，返回动态页面 （2） 域名/模块名/控制器/操作方法/参数/参数值（查询字符串）  （3）index模块、控制器、方法可以省略  其他必须写完整url或者改路由映射    private方法无法访问 （4）视图 $this->assign(模板变量名，传入变量) $this->fetch()     （5）模型 4、默认情况下，模型，表名，控制器，模板应该是默认同名的，就可以无需配置直接调用

二、URL和路由 1、域名/index.php/模块名/控制器/操作方法/参数/参数值（查询字符串）  (1)控制器命名是大驼峰的话，url中改为短线 （2）url中隐藏入口文件index.php  要修改服务器配置文件 2、 把URL改成其他值，如去掉控制器  在route.php配置  '新url'=>'原url' （1）url是相对的   参数  方法/:参数名   参数可选 方法/[:参数名]   （2）完整匹配 格式必须完全相同，不能多    方法/[:参数名]$  (3)改变默认的分隔符/  config.php 'pathinfo_depr' =>  (4)路由约束  '新URL'=>[ 原url , [约束数组]]    方法 'method' => 'get' 后缀
'ext'=>'html'  参数类型 id year name  （5）路由分组  （6）复杂路由      3、生成URL  URL::build（地址，参数键值(数组)）助手函数 url('','') 

三、请求响应  1、请求对象 命名空间think\Request  （1）实例生成 Request::instance()   ->url()  (2)控制器继承think\Controller  $this->request->url() (3)自动注入 操作方法（Request $request,） (4)请求对象动态绑定属性   ->bind()    (5)助手函数 request()->    2、 请求对象的方法  （1）参数（查询字符串）  参数数组->param()  ->param("参数名")    优先级  （2）其他方法  ->get() ->post() ->route() ->session() ->cookie() ->server() ->env() ->file()   (3)->type() ->method() ->ip() 域名 入口文件 完整url 根地 
址  pathinfo  后缀ext()  查询字符串 协议  主机   模块 控制器  操作   路由  调度  3、响应对象 （1）一般是自动的   （2）默认输出类型 html 可改为json 或xml jsonop 模板 重定向（3）手动输出  （4）页面跳转   Jump Trait   页面重定向 $this->redirect()

四、数据库1、配置 database.php 类型 地址 用户 密码 端口  2、原生查询 （1）读操作Db::query()  （2）写操作 Db::execute('sql') 3、数据库切换(1)Db::connect({})->query()
(2)在database.php 设置db1=>[] db2=>[]   4、外部查询变量 和sql   参数绑定 占位符绑定 匿名占位符? ? ?   [a,b ,c]    命名占位符  [a=>变量,b=>,c=>]   5、查询构造器
Db::table('表名')    ->where('列'，'>',10) ->update()  ->select()  ->insert()  ->find()  ->limit() ->order() ->field()   ->find()  ->column()   6、事务  Db::transaction( function(){ 语句::table()->}   ) 自动回滚  （2）手动控制  提交  try catch()回滚       

五、查询语言 1、行筛选 where（列，1）->find() 返回一维数组      2、条件 大于小于等于 模糊like 区间（非） between  （不）存在于 in  （非）空null exp原生语句
3、多个查询条件 where([关联数组])  '列'=>['条件',数]      混合条件and or    4、快捷查询  多列同一条件 where(列1&列2,'>',10)  and     | or  5、视图查询  6、闭包查询
7、Query对象   8、获取数值 ->value() 返回的不是数组是值  9、获取列数据   10、列查询 11、字符串查询 12、日期时间查询 whereTime()  会自动识别int string 时间戳 日期 日期时间  包括yesterday  13、分块查询 

六、模型和关联  表等于类  模型类返回的是对象  1、 use think\Model  class 类名 extends Model{}    类名自动对应表名   2、单独设置表  protected $table="表名" 或$name="不带前缀的表"  设置数据库    3、操作  控制器中 use \model\模型类名  new 模型类名（和控制器名冲突时命别名）     （1）增加   模型对象->列名=""    ->save()  如果成功save则返回提示   （2）可以把整个过程封装为函数      (3)批量  数组-saveAll() （4）查询 对象=模型类::get()   
 

 