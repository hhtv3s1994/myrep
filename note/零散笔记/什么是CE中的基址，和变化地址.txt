ce的原理   open process readprocessmemory writeprocessmemory  virtualQuery 检查可读写区
 virtualprotect
40000开始搜


是防破解？把数据存在别的地方？


有个问题，数组名，函数名本质是地址指针？ 会专门有分配内存位置吗？还是只是编译的概念？
不存在   &a是得不到数组名的地址，只能得到首地址   &a=a   
并非是一个指针变量，没有单独分配空间，而是意义上的代表“首地址”

指向函数的指针
结构变量和指向结构的指针
函数名和指向函数的指针
指向字符串的指针，本质应该和数组没区别
指向类的指针?  new

堆分配的



基址是指针地址 

Character  *character=new Character    character是个指针变量

&charactor=0x1000   基址是指针变量的地址

charater的值是对象/结构的地址   *charactor=   {} 的首地址  ，这个new分配的地址可能会改变，
即charater会改变

类结构  *bag 0  *equipment  4 health 8 money level     
血量   *(*1000+8)   1000是基，8是偏移



为什么有的数据地址每次打开程序会变化？  
malloc分配的内存？  一般有个静态地址记录   malloc   *p  可能是个数组名，函数名，指针名
结构体 

经常有用寄存器来存基址的[edx+edi*4]


什么代码访问了该地址？  访问了



全局变量是静态分配

局部变量是堆栈 ，从偏移中算出来

指针跟变量的地址有关，指向  栈   指向堆 指向全局

当程序执行时机不同的时候，可能数据还没被创建，如果对于采取了随机数等形式，每次创建的数据大小可能不同，然后就占据了空间，导致空间和上次不同

理论上来说局部变量是紧凑的加入的

指针  **p    对象  game->
player->

winmain无限循环，程序没退出时，数据还保留在栈中



堆new 是怎么分配