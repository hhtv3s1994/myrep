手机也可以做，快速录制  
使用虚拟人物形象：摄像替换软件

必须有音频
搞笑式教学,把教学当成玩笑来做

这同学出现



用词解释词――可以举例，但是不能乱做比喻
多说些幕后故事
永远用中文，可以翻译英文，稍微带下单词，但是任何时候都用中文讲解
永远不要说符号    ――可以用   的和   的积   取余数等说法  ――最好是面向整体算法命名

整体性思路：不要一步步讲

从上层向下讲，少纠结细节
向上展开说通用规则――中文表述――比如递归的意义

函数的定义和调用的区别
上层调用下层的逻辑意义，抽象含义――   是代码嵌入 传参的意义？   什么是输入什么是输出？
  输入输出的概念仅仅跟被调函数有关吗？ 接收返回值是一种输入吗？
  系统调用io是输出吗？   修改外部变量是输出吗？  修改指针，数组，对象参数内容的值是输出吗？
	定义和调用混淆了吗？
  定义和调用的区别？  调用时才是活动的函数
函数没调用时，一切代码都是死的，只是一种定义

  向着被调


永远不要 直接解释抽象概念――基于实例   事物共同本质是什么   就是事物的封装，   上层和下层的关系    是把多个相关联的属性，按照关联来归纳为一个名字     属性可能来自不同的领域 
属性间的关系  属性的行为       根据属性值不同，抽象概念可能有不同的具体实例
比如三角形由三个边   三个角组成   边由边长组成   边长由长度和单位组成
这个和编译原理中的分词法   和面向对象中的组合很像

实际上就是给同类对象归类  并命名   分类分层的一个过程     对象的属性和属性的下层属性构成对象的树结构                  对象不同属性值体现了不同的实例，或者说例子    只要分好了类，明白了属性和方法的实现 ，那就可以 解决所有相关问题  
如果无法解决问题，要么是对于属性值的可能性没有枚举完   要么就是对于  不同类的关系联系没有想明白   这都需要记录积累新知识
我们需要记录的只是知识的索引，  需要记录所有知识名  包括知识联系的名字   记住实例的可能请况


知识两种：  知识本身（关键词）   知识和其他知识的联系   这种联系也是需要被记忆的――我们解决问题就是搜索相关知识，然后找到联系的所有知识的过程，知识之间的因果，顺序，来由，组合，排列      这是学习的本质，所以要分类，分层，学到最细致的小知识（关键词）――形成知识树

概念没理解多半是知识（关键词）少了，或者没懂关键词，或者关键词之间联系没弄清――方法是补充关键词，拆分关键词到底层实现

给某种现象，行为，事物，事物集合命名。就叫抽象，抽象就是给一堆事物和事物的互相关联，行为来命名。    我们要勇于创建新的知识名词（生造词），学习新的知识名词――把复杂关联简化成一个词

实例指引抽象：
抽象是实例的抽象――抽象不断向下探索，一层层向下，最终还是会进入底层的实例，所以用实例引导抽象是合适的   可以认为抽象是实例的封装组合    是归类，实例间的关联
我才不想给你们讲概念呢，我说起来累，你们看起来不累吗？  什么狗屁渲染，封装，接口，继承，api，什么依赖，反转，背这玩意干嘛？

分类和命名是很重要的


一般都是写好稿子了   设计好了所有台词
如果要即兴聊天――应该有一个预先的思想――按照什么顺序，围绕中心，聊哪类话题，怎么停止和收尾

超搞笑的教学――用各种搞怪语气――疯狂自嘲   说相声，扯些完全没用的。。。。所有的知识都不做解释，只列举――举一些夸张搞笑的例子

语言要非常口语化――但是专门的名词少不了   台词必须精心设计，然后要有很强的情绪意识――玮道来――只有专门的废话，没有无用的废话（要说废话，那就跟知识完全无关，不要在知识上讲费话），把知识当成理所当然地讲，把

一个视频十分钟，编十个程序，每天一更

思考  设计api  中文伪代码  实现  测试  用例
编程一分钟――怎么才能压缩到一分钟？ 用图像，文字，高速语言来迅速解释
一分钟贪吃蛇  1.99分钟也是一分钟
一分钟做完经典题（规范编程）   
一分钟做网页：  项目需求 思考 文档
一分钟算法，一分钟数学

变声软件  用一个代码播放软件（复制）  变声软件的数据
击键软件   

重功能

写稿子    用ai画图  或者网上找图
模仿其他人的语言风格，教学风格

视频上做标注
从标准函数库讲起


我的水平并没有高到这种程度，可能有错，但是程序员需要自身debug，重构知识

做些有趣的小应用：或者实用库，或者是小游戏，小动画来动态显示功能的用途……

同义词讲解

所有英文的地方翻译成中文――给大家展示词典  不光是程序，包括概念也要讲解成英语
全部用中文――在旁边或者发布栏列出单词表

要教底层知识，引申知识，应用知识，对每个地方的细节都讲清楚――必须设法动态展示，不要空讲

展示项目文档写作：
不要录制打代码过程，也不要打文章

直接按顺序播放代码――剪贴板顺序粘贴――按行或者其他，加上键盘音效

引申底层知识，和关联知识――在稿子里面想好，不光教已有的api，还要教其他语言api的实现，api的原理，故事  ――比如  integer的底层，print的底层――不要想着教给一般人
其他语言的相关特性――由别人封装的api和库  ――一个api的通常应用

讲解第三方库的相关知识


重构


输入输出：模块化思想――接口        讲解时从输入预测输出

1、使用项目实例讲解   知识点
项目的重心在于思想：怎么实现――怎样解题   

讲到某个概念，就把动图拿出来    ――需要把原理深入进去

有趣。贴近现实
自顶而下
项目设计思想……  模块的设计 接口的设计   之间的关系……关联，组合 （）

写中文伪代码
画程序模块图
画程序最终展示图   


2  动态化  直观化  先把代码跑起来
然后对实现一一分析


3、工具讲解   对于工具使用   对于API要翻译成中文……项目中使用的api都要讲到
为什么要用
   
4、图形化   图片  和gif动画
5、不详细录开发过程   需要动态设计的部分全部直接跳过

